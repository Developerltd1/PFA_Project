// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace PFA_Project.Models;

public partial class PFAdbContext : DbContext
{
    public PFAdbContext(DbContextOptions<PFAdbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<TblExpentidure> TblExpentidures { get; set; }

    public virtual DbSet<TblFundRecived> TblFundReciveds { get; set; }

    public virtual DbSet<TblFundType> TblFundTypes { get; set; }

    public virtual DbSet<TblTransaction> TblTransactions { get; set; }

    public virtual DbSet<TblUser> TblUsers { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<TblExpentidure>(entity =>
        {
            entity.HasKey(e => e.ExpentidureId);

            entity.ToTable("tblExpentidure");

            entity.Property(e => e.Details)
                .HasMaxLength(400)
                .IsUnicode(false);
            entity.Property(e => e.FundTypeId).HasColumnName("FundType_ID");
        });

        modelBuilder.Entity<TblFundRecived>(entity =>
        {
            entity.HasKey(e => e.FundRecivedId);

            entity.ToTable("tblFundRecived");

            entity.Property(e => e.Details)
                .HasMaxLength(400)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TblFundType>(entity =>
        {
            entity.HasKey(e => e.FundTypeId);

            entity.ToTable("tblFundType");

            entity.Property(e => e.FundTypeId)
                .ValueGeneratedNever()
                .HasColumnName("FundTypeID");
            entity.Property(e => e.FundTypeName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TblTransaction>(entity =>
        {
            entity.HasKey(e => e.TransactionId);

            entity.ToTable("tblTransaction");

            entity.Property(e => e.TransactionId).HasColumnName("TransactionID");
            entity.Property(e => e.Amount).HasColumnType("money");
            entity.Property(e => e.EnterByUserId).HasColumnName("EnterByUser_ID");
            entity.Property(e => e.EntryDate).HasColumnType("smalldatetime");
            entity.Property(e => e.FundTypeId).HasColumnName("FundType_ID");
            entity.Property(e => e.ModifyByUserId).HasColumnName("ModifyByUser_ID");
            entity.Property(e => e.ModifyDate).HasColumnType("smalldatetime");
            entity.Property(e => e.TransactionDetails)
                .HasMaxLength(200)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TblUser>(entity =>
        {
            entity.HasKey(e => e.UserId);

            entity.ToTable("tblUser");

            entity.Property(e => e.Contact)
                .HasMaxLength(99)
                .IsUnicode(false);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.UserName)
                .HasMaxLength(300)
                .IsUnicode(false);
            entity.Property(e => e.UserPassword)
                .HasMaxLength(99)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}